{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/test/src/composants/Emma.js\",\n  _s = $RefreshSig$();\nimport Norah from \"./Norah\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Emma() {\n  _s();\n  // state\n  const [personnes, setPersonnes] = useState([{\n    id: 1,\n    nom: \"davy\"\n  }, {\n    id: 2,\n    nom: \"orna\"\n  }, {\n    id: 3,\n    nom: \"mika\"\n  }, {\n    id: 4,\n    nom: \"chris\"\n  }]);\n\n  // comportement\n\n  // affichage\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: personnes.map(personne =>\n      /*#__PURE__*/\n      /*<li keys={personne.id}>\n      {personne.nom}\n      </li>*/\n      _jsxDEV(Norah, {\n        tar: nom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Emma, \"FXXr4HDIDqjBqSqdsovw8FwbdBE=\");\n_c = Emma;\nvar _c;\n$RefreshReg$(_c, \"Emma\");","map":{"version":3,"names":["Norah","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Emma","_s","personnes","setPersonnes","id","nom","children","map","personne","tar","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/test/src/composants/Emma.js"],"sourcesContent":["import Norah from \"./Norah\"\nimport {useState} from \"react\"\n\nexport default function Emma(){\n    \n    // state\n    const [personnes, setPersonnes] = useState([\n        \n        {id:1, nom:\"davy\"},\n        {id:2, nom:\"orna\"},\n        {id:3, nom:\"mika\"},\n        {id:4, nom:\"chris\"}\n    ])\n    \n    // comportement\n    \n    // affichage\n    \n    return(\n        <>\n            <ul>\n                {personnes.map((personne)=>/*<li keys={personne.id}>\n                {personne.nom}\n                </li>*/\n                <Norah tar={nom}/>\n                )}\n            </ul>\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,SAAS;AAC3B,SAAQC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,eAAe,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAE1B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAEvC;IAACS,EAAE,EAAC,CAAC;IAAEC,GAAG,EAAC;EAAM,CAAC,EAClB;IAACD,EAAE,EAAC,CAAC;IAAEC,GAAG,EAAC;EAAM,CAAC,EAClB;IAACD,EAAE,EAAC,CAAC;IAAEC,GAAG,EAAC;EAAM,CAAC,EAClB;IAACD,EAAE,EAAC,CAAC;IAAEC,GAAG,EAAC;EAAO,CAAC,CACtB,CAAC;;EAEF;;EAEA;;EAEA,oBACIR,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACIT,OAAA;MAAAS,QAAA,EACKJ,SAAS,CAACK,GAAG,CAAEC,QAAQ;MAAA;MAAG;AAC3C;AACA;MACgBX,OAAA,CAACH,KAAK;QAACe,GAAG,EAAEJ;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACP,CAAC;AAEX;AAACZ,EAAA,CA1BuBD,IAAI;AAAAc,EAAA,GAAJd,IAAI;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}