{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/test/src/composants/Emma.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Norah from \"./Norah\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Emma() {\n  _s();\n  // etats ou données\n\n  const [personnes, setPersonnes] = useState([{\n    id: 1,\n    nom: \"davy\"\n  }, {\n    id: 2,\n    nom: \"chris\"\n  }, {\n    id: 3,\n    nom: \"mika\"\n  }]);\n\n  // comportements\n\n  handleDelete = id => {\n    newPersonnes = [...personnes];\n    filtrePersonnes = newPersonnes.filter(item => item.id === id);\n    setPersonnes(filtrePersonnes);\n  };\n\n  // affichage\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: personnes.map(personne => /*#__PURE__*/_jsxDEV(Norah, {\n      keys: personne.id,\n      ...personne,\n      personne: personne,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n}\n_s(Emma, \"m9hTdq+2bRR4smCG1CxdijqWMfc=\");\n_c = Emma;\nvar _c;\n$RefreshReg$(_c, \"Emma\");","map":{"version":3,"names":["useState","Norah","jsxDEV","_jsxDEV","Fragment","_Fragment","Emma","_s","personnes","setPersonnes","id","nom","handleDelete","newPersonnes","filtrePersonnes","filter","item","children","map","personne","keys","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/test/src/composants/Emma.js"],"sourcesContent":["import {useState} from \"react\"\nimport Norah from \"./Norah\"\n\nexport default function Emma(){\n    \n    // etats ou données\n    \n    const [personnes, setPersonnes] = useState([\n        {id:1, nom:\"davy\"},\n        {id:2, nom:\"chris\"},\n        {id:3, nom:\"mika\"}\n    ])\n    \n    // comportements\n    \n    handleDelete = (id)=>{\n        newPersonnes = [...personnes]\n        filtrePersonnes = newPersonnes.filter(item=>item.id===id)\n        setPersonnes(filtrePersonnes)\n    }\n    \n    // affichage\n    \n    return(\n        <>\n            {personnes.map(personne=>\n                <Norah keys={personne.id} {...personne} personne={personne} handleDelete={handleDelete}/>\n            )}\n        </>\n    )\n}"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,KAAK,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3B,eAAe,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAE1B;;EAEA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CACvC;IAACU,EAAE,EAAC,CAAC;IAAEC,GAAG,EAAC;EAAM,CAAC,EAClB;IAACD,EAAE,EAAC,CAAC;IAAEC,GAAG,EAAC;EAAO,CAAC,EACnB;IAACD,EAAE,EAAC,CAAC;IAAEC,GAAG,EAAC;EAAM,CAAC,CACrB,CAAC;;EAEF;;EAEAC,YAAY,GAAIF,EAAE,IAAG;IACjBG,YAAY,GAAG,CAAC,GAAGL,SAAS,CAAC;IAC7BM,eAAe,GAAGD,YAAY,CAACE,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACN,EAAE,KAAGA,EAAE,CAAC;IACzDD,YAAY,CAACK,eAAe,CAAC;EACjC,CAAC;;EAED;;EAEA,oBACIX,OAAA,CAAAE,SAAA;IAAAY,QAAA,EACKT,SAAS,CAACU,GAAG,CAACC,QAAQ,iBACnBhB,OAAA,CAACF,KAAK;MAACmB,IAAI,EAAED,QAAQ,CAACT,EAAG;MAAA,GAAKS,QAAQ;MAAEA,QAAQ,EAAEA,QAAS;MAACP,YAAY,EAAEA;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAC5F;EAAC,gBACH,CAAC;AAEX;AAACjB,EAAA,CA3BuBD,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}